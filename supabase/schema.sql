-- Enable Row Level Security
ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

-- Create profiles table
CREATE TABLE IF NOT EXISTS profiles (
  id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,
  username TEXT UNIQUE NOT NULL,
  full_name TEXT,
  avatar_url TEXT,
  bio TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create countries table
CREATE TABLE IF NOT EXISTS countries (
  id SERIAL PRIMARY KEY,
  code TEXT UNIQUE NOT NULL,
  name TEXT NOT NULL,
  flag TEXT NOT NULL
);

-- Create cities table
CREATE TABLE IF NOT EXISTS cities (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  country_id INTEGER REFERENCES countries(id) ON DELETE CASCADE NOT NULL,
  latitude DECIMAL(10, 8),
  longitude DECIMAL(11, 8),
  UNIQUE(name, country_id)
);

-- Create user_locations table (replacing user_countries)
CREATE TABLE IF NOT EXISTS user_locations (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  country_id INTEGER REFERENCES countries(id) ON DELETE CASCADE NOT NULL,
  city_id INTEGER REFERENCES cities(id) ON DELETE CASCADE,
  type TEXT CHECK (type IN ('lived', 'visited')) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(user_id, country_id, city_id, type)
);

-- Row Level Security Policies
CREATE POLICY "Users can view all profiles" ON profiles FOR SELECT USING (true);
CREATE POLICY "Users can update own profile" ON profiles FOR UPDATE USING (auth.uid() = id);
CREATE POLICY "Users can insert own profile" ON profiles FOR INSERT WITH CHECK (auth.uid() = id);

CREATE POLICY "Users can view all countries" ON countries FOR SELECT USING (true);
CREATE POLICY "Users can view all cities" ON cities FOR SELECT USING (true);

CREATE POLICY "Users can view all user_locations" ON user_locations FOR SELECT USING (true);
CREATE POLICY "Users can insert own user_locations" ON user_locations FOR INSERT WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Users can update own user_locations" ON user_locations FOR UPDATE USING (auth.uid() = user_id);
CREATE POLICY "Users can delete own user_locations" ON user_locations FOR DELETE USING (auth.uid() = user_id);

-- Function to handle user creation
CREATE OR REPLACE FUNCTION handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO profiles (id, username, full_name, avatar_url)
  VALUES (
    NEW.id,
    COALESCE(NEW.raw_user_meta_data->>'username', split_part(NEW.email, '@', 1)),
    COALESCE(NEW.raw_user_meta_data->>'full_name', ''),
    COALESCE(NEW.raw_user_meta_data->>'avatar_url', '')
  );
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Trigger for new user creation
CREATE OR REPLACE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION handle_new_user();

-- Insert countries data
INSERT INTO countries (code, name, flag) VALUES
  ('TR', 'Turkey', 'ğŸ‡¹ğŸ‡·'),
  ('US', 'United States', 'ğŸ‡ºğŸ‡¸'),
  ('GB', 'United Kingdom', 'ğŸ‡¬ğŸ‡§'),
  ('DE', 'Germany', 'ğŸ‡©ğŸ‡ª'),
  ('FR', 'France', 'ğŸ‡«ğŸ‡·'),
  ('IT', 'Italy', 'ğŸ‡®ğŸ‡¹'),
  ('ES', 'Spain', 'ğŸ‡ªğŸ‡¸'),
  ('JP', 'Japan', 'ğŸ‡¯ğŸ‡µ'),
  ('CN', 'China', 'ğŸ‡¨ğŸ‡³'),
  ('BR', 'Brazil', 'ğŸ‡§ğŸ‡·'),
  ('AU', 'Australia', 'ğŸ‡¦ğŸ‡º'),
  ('CA', 'Canada', 'ğŸ‡¨ğŸ‡¦'),
  ('NL', 'Netherlands', 'ğŸ‡³ğŸ‡±'),
  ('CH', 'Switzerland', 'ğŸ‡¨ğŸ‡­'),
  ('SE', 'Sweden', 'ğŸ‡¸ğŸ‡ª'),
  ('NO', 'Norway', 'ğŸ‡³ğŸ‡´'),
  ('DK', 'Denmark', 'ğŸ‡©ğŸ‡°'),
  ('FI', 'Finland', 'ğŸ‡«ğŸ‡®'),
  ('RU', 'Russia', 'ğŸ‡·ğŸ‡º'),
  ('IN', 'India', 'ğŸ‡®ğŸ‡³'),
  ('KR', 'South Korea', 'ğŸ‡°ğŸ‡·'),
  ('TH', 'Thailand', 'ğŸ‡¹ğŸ‡­'),
  ('SG', 'Singapore', 'ğŸ‡¸ğŸ‡¬'),
  ('AE', 'UAE', 'ğŸ‡¦ğŸ‡ª'),
  ('GR', 'Greece', 'ğŸ‡¬ğŸ‡·'),
  ('PT', 'Portugal', 'ğŸ‡µğŸ‡¹'),
  ('MX', 'Mexico', 'ğŸ‡²ğŸ‡½'),
  ('AR', 'Argentina', 'ğŸ‡¦ğŸ‡·'),
  ('ZA', 'South Africa', 'ğŸ‡¿ğŸ‡¦'),
  ('EG', 'Egypt', 'ğŸ‡ªğŸ‡¬'),
  ('BE', 'Belgium', 'ğŸ‡§ğŸ‡ª'),
  ('AT', 'Austria', 'ğŸ‡¦ğŸ‡¹'),
  ('PL', 'Poland', 'ğŸ‡µğŸ‡±'),
  ('ID', 'Indonesia', 'ğŸ‡®ğŸ‡©'),
  ('MY', 'Malaysia', 'ğŸ‡²ğŸ‡¾'),
  ('VN', 'Vietnam', 'ğŸ‡»ğŸ‡³'),
  ('PH', 'Philippines', 'ğŸ‡µğŸ‡­'),
  ('NZ', 'New Zealand', 'ğŸ‡³ğŸ‡¿'),
  ('IE', 'Ireland', 'ğŸ‡®ğŸ‡ª'),
  ('CZ', 'Czech Republic', 'ğŸ‡¨ğŸ‡¿'),
  ('HU', 'Hungary', 'ğŸ‡­ğŸ‡º'),
  ('RO', 'Romania', 'ğŸ‡·ğŸ‡´'),
  ('HR', 'Croatia', 'ğŸ‡­ğŸ‡·'),
  ('RS', 'Serbia', 'ğŸ‡·ğŸ‡¸'),
  ('BG', 'Bulgaria', 'ğŸ‡§ğŸ‡¬'),
  ('SK', 'Slovakia', 'ğŸ‡¸ğŸ‡°'),
  ('SI', 'Slovenia', 'ğŸ‡¸ğŸ‡®'),
  ('LT', 'Lithuania', 'ğŸ‡±ğŸ‡¹'),
  ('LV', 'Latvia', 'ğŸ‡±ğŸ‡»'),
  ('EE', 'Estonia', 'ğŸ‡ªğŸ‡ª'),
  ('IS', 'Iceland', 'ğŸ‡®ğŸ‡¸'),
  ('MT', 'Malta', 'ğŸ‡²ğŸ‡¹'),
  ('CY', 'Cyprus', 'ğŸ‡¨ğŸ‡¾'),
  ('LU', 'Luxembourg', 'ğŸ‡±ğŸ‡º'),
  ('MC', 'Monaco', 'ğŸ‡²ğŸ‡¨'),
  ('AD', 'Andorra', 'ğŸ‡¦ğŸ‡©'),
  ('SM', 'San Marino', 'ğŸ‡¸ğŸ‡²'),
  ('VA', 'Vatican City', 'ğŸ‡»ğŸ‡¦'),
  ('LI', 'Liechtenstein', 'ğŸ‡±ğŸ‡®'),
  ('UA', 'Ukraine', 'ğŸ‡ºğŸ‡¦'),
  ('BY', 'Belarus', 'ğŸ‡§ğŸ‡¾'),
  ('MD', 'Moldova', 'ğŸ‡²ğŸ‡©'),
  ('AL', 'Albania', 'ğŸ‡¦ğŸ‡±'),
  ('MK', 'North Macedonia', 'ğŸ‡²ğŸ‡°'),
  ('BA', 'Bosnia and Herzegovina', 'ğŸ‡§ğŸ‡¦'),
  ('ME', 'Montenegro', 'ğŸ‡²ğŸ‡ª'),
  ('XK', 'Kosovo', 'ğŸ‡½ğŸ‡°'),
  ('GE', 'Georgia', 'ğŸ‡¬ğŸ‡ª'),
  ('AM', 'Armenia', 'ğŸ‡¦ğŸ‡²'),
  ('AZ', 'Azerbaijan', 'ğŸ‡¦ğŸ‡¿'),
  ('IL', 'Israel', 'ğŸ‡®ğŸ‡±'),
  ('PS', 'Palestine', 'ğŸ‡µğŸ‡¸'),
  ('JO', 'Jordan', 'ğŸ‡¯ğŸ‡´'),
  ('LB', 'Lebanon', 'ğŸ‡±ğŸ‡§'),
  ('SY', 'Syria', 'ğŸ‡¸ğŸ‡¾'),
  ('IQ', 'Iraq', 'ğŸ‡®ğŸ‡¶'),
  ('KW', 'Kuwait', 'ğŸ‡°ğŸ‡¼'),
  ('SA', 'Saudi Arabia', 'ğŸ‡¸ğŸ‡¦'),
  ('YE', 'Yemen', 'ğŸ‡¾ğŸ‡ª'),
  ('OM', 'Oman', 'ğŸ‡´ğŸ‡²'),
  ('QA', 'Qatar', 'ğŸ‡¶ğŸ‡¦'),
  ('BH', 'Bahrain', 'ğŸ‡§ğŸ‡­'),
  ('IR', 'Iran', 'ğŸ‡®ğŸ‡·'),
  ('AF', 'Afghanistan', 'ğŸ‡¦ğŸ‡«'),
  ('PK', 'Pakistan', 'ğŸ‡µğŸ‡°'),
  ('BD', 'Bangladesh', 'ğŸ‡§ğŸ‡©'),
  ('LK', 'Sri Lanka', 'ğŸ‡±ğŸ‡°'),
  ('NP', 'Nepal', 'ğŸ‡³ğŸ‡µ'),
  ('BT', 'Bhutan', 'ğŸ‡§ğŸ‡¹'),
  ('MV', 'Maldives', 'ğŸ‡²ğŸ‡»'),
  ('MM', 'Myanmar', 'ğŸ‡²ğŸ‡²'),
  ('LA', 'Laos', 'ğŸ‡±ğŸ‡¦'),
  ('KH', 'Cambodia', 'ğŸ‡°ğŸ‡­'),
  ('TW', 'Taiwan', 'ğŸ‡¹ğŸ‡¼'),
  ('MN', 'Mongolia', 'ğŸ‡²ğŸ‡³'),
  ('KP', 'North Korea', 'ğŸ‡°ğŸ‡µ'),
  ('HK', 'Hong Kong', 'ğŸ‡­ğŸ‡°'),
  ('MO', 'Macau', 'ğŸ‡²ğŸ‡´'),
  ('TL', 'Timor-Leste', 'ğŸ‡¹ğŸ‡±'),
  ('BN', 'Brunei', 'ğŸ‡§ğŸ‡³'),
  ('FJ', 'Fiji', 'ğŸ‡«ğŸ‡¯'),
  ('PG', 'Papua New Guinea', 'ğŸ‡µğŸ‡¬'),
  ('SB', 'Solomon Islands', 'ğŸ‡¸ğŸ‡§'),
  ('VU', 'Vanuatu', 'ğŸ‡»ğŸ‡º'),
  ('NC', 'New Caledonia', 'ğŸ‡³ğŸ‡¨'),
  ('PF', 'French Polynesia', 'ğŸ‡µğŸ‡«'),
  ('WS', 'Samoa', 'ğŸ‡¼ğŸ‡¸'),
  ('TO', 'Tonga', 'ğŸ‡¹ğŸ‡´'),
  ('KI', 'Kiribati', 'ğŸ‡°ğŸ‡®'),
  ('PW', 'Palau', 'ğŸ‡µğŸ‡¼'),
  ('MH', 'Marshall Islands', 'ğŸ‡²ğŸ‡­'),
  ('FM', 'Micronesia', 'ğŸ‡«ğŸ‡²'),
  ('NR', 'Nauru', 'ğŸ‡³ğŸ‡·'),
  ('TV', 'Tuvalu', 'ğŸ‡¹ğŸ‡»'),
  ('CK', 'Cook Islands', 'ğŸ‡¨ğŸ‡°'),
  ('NU', 'Niue', 'ğŸ‡³ğŸ‡º'),
  ('MA', 'Morocco', 'ğŸ‡²ğŸ‡¦'),
  ('DZ', 'Algeria', 'ğŸ‡©ğŸ‡¿'),
  ('TN', 'Tunisia', 'ğŸ‡¹ğŸ‡³'),
  ('LY', 'Libya', 'ğŸ‡±ğŸ‡¾'),
  ('SD', 'Sudan', 'ğŸ‡¸ğŸ‡©'),
  ('SS', 'South Sudan', 'ğŸ‡¸ğŸ‡¸'),
  ('ET', 'Ethiopia', 'ğŸ‡ªğŸ‡¹'),
  ('ER', 'Eritrea', 'ğŸ‡ªğŸ‡·'),
  ('DJ', 'Djibouti', 'ğŸ‡©ğŸ‡¯'),
  ('SO', 'Somalia', 'ğŸ‡¸ğŸ‡´'),
  ('KE', 'Kenya', 'ğŸ‡°ğŸ‡ª'),
  ('UG', 'Uganda', 'ğŸ‡ºğŸ‡¬'),
  ('RW', 'Rwanda', 'ğŸ‡·ğŸ‡¼'),
  ('BI', 'Burundi', 'ğŸ‡§ğŸ‡®'),
  ('TZ', 'Tanzania', 'ğŸ‡¹ğŸ‡¿'),
  ('MW', 'Malawi', 'ğŸ‡²ğŸ‡¼'),
  ('ZM', 'Zambia', 'ğŸ‡¿ğŸ‡²'),
  ('ZW', 'Zimbabwe', 'ğŸ‡¿ğŸ‡¼'),
  ('MZ', 'Mozambique', 'ğŸ‡²ğŸ‡¿'),
  ('MG', 'Madagascar', 'ğŸ‡²ğŸ‡¬'),
  ('KM', 'Comoros', 'ğŸ‡°ğŸ‡²'),
  ('MU', 'Mauritius', 'ğŸ‡²ğŸ‡º'),
  ('SC', 'Seychelles', 'ğŸ‡¸ğŸ‡¨'),
  ('RE', 'RÃ©union', 'ğŸ‡·ğŸ‡ª'),
  ('YT', 'Mayotte', 'ğŸ‡¾ğŸ‡¹'),
  ('AO', 'Angola', 'ğŸ‡¦ğŸ‡´'),
  ('NA', 'Namibia', 'ğŸ‡³ğŸ‡¦'),
  ('BW', 'Botswana', 'ğŸ‡§ğŸ‡¼'),
  ('LS', 'Lesotho', 'ğŸ‡±ğŸ‡¸'),
  ('SZ', 'Eswatini', 'ğŸ‡¸ğŸ‡¿'),
  ('CD', 'Congo (DRC)', 'ğŸ‡¨ğŸ‡©'),
  ('CG', 'Congo', 'ğŸ‡¨ğŸ‡¬'),
  ('CF', 'Central African Republic', 'ğŸ‡¨ğŸ‡«'),
  ('CM', 'Cameroon', 'ğŸ‡¨ğŸ‡²'),
  ('TD', 'Chad', 'ğŸ‡¹ğŸ‡©'),
  ('GQ', 'Equatorial Guinea', 'ğŸ‡¬ğŸ‡¶'),
  ('GA', 'Gabon', 'ğŸ‡¬ğŸ‡¦'),
  ('ST', 'SÃ£o TomÃ© and PrÃ­ncipe', 'ğŸ‡¸ğŸ‡¹'),
  ('NG', 'Nigeria', 'ğŸ‡³ğŸ‡¬'),
  ('BJ', 'Benin', 'ğŸ‡§ğŸ‡¯'),
  ('TG', 'Togo', 'ğŸ‡¹ğŸ‡¬'),
  ('GH', 'Ghana', 'ğŸ‡¬ğŸ‡­'),
  ('BF', 'Burkina Faso', 'ğŸ‡§ğŸ‡«'),
  ('CI', 'CÃ´te d''Ivoire', 'ğŸ‡¨ğŸ‡®'),
  ('LR', 'Liberia', 'ğŸ‡±ğŸ‡·'),
  ('SL', 'Sierra Leone', 'ğŸ‡¸ğŸ‡±'),
  ('GN', 'Guinea', 'ğŸ‡¬ğŸ‡³'),
  ('GW', 'Guinea-Bissau', 'ğŸ‡¬ğŸ‡¼'),
  ('SN', 'Senegal', 'ğŸ‡¸ğŸ‡³'),
  ('GM', 'Gambia', 'ğŸ‡¬ğŸ‡²'),
  ('MR', 'Mauritania', 'ğŸ‡²ğŸ‡·'),
  ('ML', 'Mali', 'ğŸ‡²ğŸ‡±'),
  ('NE', 'Niger', 'ğŸ‡³ğŸ‡ª'),
  ('CV', 'Cape Verde', 'ğŸ‡¨ğŸ‡»'),
  ('CL', 'Chile', 'ğŸ‡¨ğŸ‡±'),
  ('CO', 'Colombia', 'ğŸ‡¨ğŸ‡´'),
  ('EC', 'Ecuador', 'ğŸ‡ªğŸ‡¨'),
  ('PE', 'Peru', 'ğŸ‡µğŸ‡ª'),
  ('BO', 'Bolivia', 'ğŸ‡§ğŸ‡´'),
  ('PY', 'Paraguay', 'ğŸ‡µğŸ‡¾'),
  ('UY', 'Uruguay', 'ğŸ‡ºğŸ‡¾'),
  ('VE', 'Venezuela', 'ğŸ‡»ğŸ‡ª'),
  ('GY', 'Guyana', 'ğŸ‡¬ğŸ‡¾'),
  ('SR', 'Suriname', 'ğŸ‡¸ğŸ‡·'),
  ('GF', 'French Guiana', 'ğŸ‡¬ğŸ‡«'),
  ('CR', 'Costa Rica', 'ğŸ‡¨ğŸ‡·'),
  ('PA', 'Panama', 'ğŸ‡µğŸ‡¦'),
  ('NI', 'Nicaragua', 'ğŸ‡³ğŸ‡®'),
  ('HN', 'Honduras', 'ğŸ‡­ğŸ‡³'),
  ('SV', 'El Salvador', 'ğŸ‡¸ğŸ‡»'),
  ('GT', 'Guatemala', 'ğŸ‡¬ğŸ‡¹'),
  ('BZ', 'Belize', 'ğŸ‡§ğŸ‡¿'),
  ('CU', 'Cuba', 'ğŸ‡¨ğŸ‡º'),
  ('JM', 'Jamaica', 'ğŸ‡¯ğŸ‡²'),
  ('HT', 'Haiti', 'ğŸ‡­ğŸ‡¹'),
  ('DO', 'Dominican Republic', 'ğŸ‡©ğŸ‡´'),
  ('PR', 'Puerto Rico', 'ğŸ‡µğŸ‡·'),
  ('BS', 'Bahamas', 'ğŸ‡§ğŸ‡¸'),
  ('BB', 'Barbados', 'ğŸ‡§ğŸ‡§'),
  ('TT', 'Trinidad and Tobago', 'ğŸ‡¹ğŸ‡¹'),
  ('GD', 'Grenada', 'ğŸ‡¬ğŸ‡©'),
  ('VC', 'Saint Vincent and the Grenadines', 'ğŸ‡»ğŸ‡¨'),
  ('LC', 'Saint Lucia', 'ğŸ‡±ğŸ‡¨'),
  ('DM', 'Dominica', 'ğŸ‡©ğŸ‡²'),
  ('AG', 'Antigua and Barbuda', 'ğŸ‡¦ğŸ‡¬'),
  ('KN', 'Saint Kitts and Nevis', 'ğŸ‡°ğŸ‡³')
ON CONFLICT (code) DO NOTHING;

-- Insert major cities for popular countries
INSERT INTO cities (name, country_id) VALUES
  -- Turkey
  ('Istanbul', (SELECT id FROM countries WHERE code = 'TR')),
  ('Ankara', (SELECT id FROM countries WHERE code = 'TR')),
  ('Izmir', (SELECT id FROM countries WHERE code = 'TR')),
  ('Antalya', (SELECT id FROM countries WHERE code = 'TR')),
  ('Bursa', (SELECT id FROM countries WHERE code = 'TR')),
  
  -- United States
  ('New York', (SELECT id FROM countries WHERE code = 'US')),
  ('Los Angeles', (SELECT id FROM countries WHERE code = 'US')),
  ('Chicago', (SELECT id FROM countries WHERE code = 'US')),
  ('Houston', (SELECT id FROM countries WHERE code = 'US')),
  ('San Francisco', (SELECT id FROM countries WHERE code = 'US')),
  ('Miami', (SELECT id FROM countries WHERE code = 'US')),
  ('Boston', (SELECT id FROM countries WHERE code = 'US')),
  ('Seattle', (SELECT id FROM countries WHERE code = 'US')),
  
  -- United Kingdom
  ('London', (SELECT id FROM countries WHERE code = 'GB')),
  ('Manchester', (SELECT id FROM countries WHERE code = 'GB')),
  ('Birmingham', (SELECT id FROM countries WHERE code = 'GB')),
  ('Edinburgh', (SELECT id FROM countries WHERE code = 'GB')),
  ('Glasgow', (SELECT id FROM countries WHERE code = 'GB')),
  
  -- Germany
  ('Berlin', (SELECT id FROM countries WHERE code = 'DE')),
  ('Munich', (SELECT id FROM countries WHERE code = 'DE')),
  ('Hamburg', (SELECT id FROM countries WHERE code = 'DE')),
  ('Frankfurt', (SELECT id FROM countries WHERE code = 'DE')),
  ('Cologne', (SELECT id FROM countries WHERE code = 'DE')),
  
  -- France
  ('Paris', (SELECT id FROM countries WHERE code = 'FR')),
  ('Marseille', (SELECT id FROM countries WHERE code = 'FR')),
  ('Lyon', (SELECT id FROM countries WHERE code = 'FR')),
  ('Nice', (SELECT id FROM countries WHERE code = 'FR')),
  ('Bordeaux', (SELECT id FROM countries WHERE code = 'FR')),
  
  -- Italy
  ('Rome', (SELECT id FROM countries WHERE code = 'IT')),
  ('Milan', (SELECT id FROM countries WHERE code = 'IT')),
  ('Naples', (SELECT id FROM countries WHERE code = 'IT')),
  ('Florence', (SELECT id FROM countries WHERE code = 'IT')),
  ('Venice', (SELECT id FROM countries WHERE code = 'IT')),
  
  -- Spain
  ('Madrid', (SELECT id FROM countries WHERE code = 'ES')),
  ('Barcelona', (SELECT id FROM countries WHERE code = 'ES')),
  ('Valencia', (SELECT id FROM countries WHERE code = 'ES')),
  ('Seville', (SELECT id FROM countries WHERE code = 'ES')),
  ('Bilbao', (SELECT id FROM countries WHERE code = 'ES')),
  
  -- Japan
  ('Tokyo', (SELECT id FROM countries WHERE code = 'JP')),
  ('Osaka', (SELECT id FROM countries WHERE code = 'JP')),
  ('Kyoto', (SELECT id FROM countries WHERE code = 'JP')),
  ('Yokohama', (SELECT id FROM countries WHERE code = 'JP')),
  ('Nagoya', (SELECT id FROM countries WHERE code = 'JP')),
  
  -- China
  ('Beijing', (SELECT id FROM countries WHERE code = 'CN')),
  ('Shanghai', (SELECT id FROM countries WHERE code = 'CN')),
  ('Guangzhou', (SELECT id FROM countries WHERE code = 'CN')),
  ('Shenzhen', (SELECT id FROM countries WHERE code = 'CN')),
  ('Hong Kong', (SELECT id FROM countries WHERE code = 'CN')),
  
  -- Brazil
  ('SÃ£o Paulo', (SELECT id FROM countries WHERE code = 'BR')),
  ('Rio de Janeiro', (SELECT id FROM countries WHERE code = 'BR')),
  ('BrasÃ­lia', (SELECT id FROM countries WHERE code = 'BR')),
  ('Salvador', (SELECT id FROM countries WHERE code = 'BR')),
  ('Fortaleza', (SELECT id FROM countries WHERE code = 'BR')),
  
  -- Australia
  ('Sydney', (SELECT id FROM countries WHERE code = 'AU')),
  ('Melbourne', (SELECT id FROM countries WHERE code = 'AU')),
  ('Brisbane', (SELECT id FROM countries WHERE code = 'AU')),
  ('Perth', (SELECT id FROM countries WHERE code = 'AU')),
  ('Adelaide', (SELECT id FROM countries WHERE code = 'AU')),
  
  -- Canada
  ('Toronto', (SELECT id FROM countries WHERE code = 'CA')),
  ('Montreal', (SELECT id FROM countries WHERE code = 'CA')),
  ('Vancouver', (SELECT id FROM countries WHERE code = 'CA')),
  ('Calgary', (SELECT id FROM countries WHERE code = 'CA')),
  ('Ottawa', (SELECT id FROM countries WHERE code = 'CA')),
  
  -- Netherlands
  ('Amsterdam', (SELECT id FROM countries WHERE code = 'NL')),
  ('Rotterdam', (SELECT id FROM countries WHERE code = 'NL')),
  ('The Hague', (SELECT id FROM countries WHERE code = 'NL')),
  ('Utrecht', (SELECT id FROM countries WHERE code = 'NL')),
  
  -- India
  ('Mumbai', (SELECT id FROM countries WHERE code = 'IN')),
  ('Delhi', (SELECT id FROM countries WHERE code = 'IN')),
  ('Bangalore', (SELECT id FROM countries WHERE code = 'IN')),
  ('Hyderabad', (SELECT id FROM countries WHERE code = 'IN')),
  ('Chennai', (SELECT id FROM countries WHERE code = 'IN'))
ON CONFLICT (name, country_id) DO NOTHING;

-- Load additional cities from separate file
-- Run cities-data.sql after this file